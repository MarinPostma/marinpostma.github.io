shadow$provide.module$node_modules$merge_anything$dist$index_cjs=function(global,process,require,module,exports,shadow$shims){function __spreadArrays(){for(var s=0,i=0,il=arguments.length;i<il;i++)s+=arguments[i].length;s=Array(s);var k=0;for(i=0;i<il;i++)for(var a=arguments[i],j=0,jl=a.length;j<jl;j++,k++)s[k]=a[j];return s}function assignProp(carry,key,newVal,originalObject){originalObject=originalObject.propertyIsEnumerable(key)?"enumerable":"nonenumerable";"enumerable"===originalObject&&(carry[key]=
newVal);"nonenumerable"===originalObject&&Object.defineProperty(carry,key,{value:newVal,enumerable:!1,writable:!0,configurable:!0})}function mergeRecursively(origin,newComer,extensions){if(!isWhat.isPlainObject(newComer))return extensions&&isWhat.isArray(extensions)&&extensions.forEach(function(extend){newComer=extend(origin,newComer)}),newComer;var newObject={};if(isWhat.isPlainObject(origin)){newObject=Object.getOwnPropertyNames(origin);var symbols_1=Object.getOwnPropertySymbols(origin);newObject=
__spreadArrays(newObject,symbols_1).reduce(function(carry,key){var targetVal=origin[key];(!isWhat.isSymbol(key)&&!Object.getOwnPropertyNames(newComer).includes(key)||isWhat.isSymbol(key)&&!Object.getOwnPropertySymbols(newComer).includes(key))&&assignProp(carry,key,targetVal,origin);return carry},{})}symbols_1=Object.getOwnPropertyNames(newComer);var symbols=Object.getOwnPropertySymbols(newComer);return __spreadArrays(symbols_1,symbols).reduce(function(carry,key){var newVal=newComer[key],targetVal=
isWhat.isPlainObject(origin)?origin[key]:void 0;extensions&&isWhat.isArray(extensions)&&extensions.forEach(function(extend){newVal=extend(targetVal,newVal)});void 0!==targetVal&&isWhat.isPlainObject(newVal)&&(newVal=mergeRecursively(targetVal,newVal,extensions));assignProp(carry,key,newVal,newComer);return carry},newObject)}function merge(origin){for(var newComers=[],_i=1;_i<arguments.length;_i++)newComers[_i-1]=arguments[_i];var extensions=null;_i=origin;isWhat.isPlainObject(origin)&&origin.extensions&&
1===Object.keys(origin).length&&(_i={},extensions=origin.extensions);return newComers.reduce(function(result,newComer){return mergeRecursively(result,newComer,extensions)},_i)}Object.defineProperty(exports,"__esModule",{value:!0});var isWhat=require("module$node_modules$is_what$dist$index_cjs");exports.concatArrays=function(originVal,newVal){return isWhat.isArray(originVal)&&isWhat.isArray(newVal)?originVal.concat(newVal):newVal};exports.default=merge;exports.merge=merge}
//# sourceMappingURL=module$node_modules$merge_anything$dist$index_cjs.js.map
