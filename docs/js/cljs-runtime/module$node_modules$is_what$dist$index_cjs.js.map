{
"version":3,
"file":"module$node_modules$is_what$dist$index_cjs.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/is-what/dist/index.cjs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$is_what$dist$index_cjs\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    return payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Function}\r\n */\r\nfunction isFunction(payload) {\r\n    return getType(payload) === 'Function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number\r\n *\r\n * This will return false for NaN\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a date, and that the date is Valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a file\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nfunction isNullOrUndefined(payload) {\r\n    return isNull(payload) || isUndefined(payload);\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!type.hasOwnProperty('prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    var name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\nexports.getType = getType;\nexports.isAnyObject = isAnyObject;\nexports.isArray = isArray;\nexports.isBlob = isBlob;\nexports.isBoolean = isBoolean;\nexports.isDate = isDate;\nexports.isEmptyString = isEmptyString;\nexports.isFile = isFile;\nexports.isFullString = isFullString;\nexports.isFunction = isFunction;\nexports.isNull = isNull;\nexports.isNullOrUndefined = isNullOrUndefined;\nexports.isNumber = isNumber;\nexports.isObject = isObject;\nexports.isObjectLike = isObjectLike;\nexports.isPlainObject = isPlainObject;\nexports.isPrimitive = isPrimitive;\nexports.isRegExp = isRegExp;\nexports.isString = isString;\nexports.isSymbol = isSymbol;\nexports.isType = isType;\nexports.isUndefined = isUndefined;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getType","payload","Object","prototype","toString","call","slice","isUndefined","isNull","isPlainObject","constructor","getPrototypeOf","isAnyObject","isString","isNumber","isNaN","isBoolean","isSymbol","defineProperty","value","isArray","isBlob","isDate","isEmptyString","isFile","isFullString","isFunction","isNullOrUndefined","isObject","isObjectLike","isPrimitive","isRegExp","isType","type","Function","TypeError","hasOwnProperty","name"]
}
